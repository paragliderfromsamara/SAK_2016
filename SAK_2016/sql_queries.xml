<?xml version="1.0" encoding="utf-8"?>
<SQLQuery>
 
  <Roles>
  SELECT roles.id, roles.name FROM roles
  ORDER BY roles.id ASC
  </Roles>

  <Users>
  select users.id, users.last_name, users.name, users.third_name, users.employee_number, users.password, roles.name as role_name from users LEFT JOIN roles ON (users.role_id = roles.id) WHERE users.is_active = 1 AND users.role_id > 1 
  ORDER BY users.last_name ASC
  </Users>

  <UpdateUserWithoutPass>
	UPDATE users SET users.name = "{1}", users.last_name = "{2}", users.third_name = "{3}", users.employee_number = {4}, users.role_id = {5}
	WHERE users.id IN({0})
  </UpdateUserWithoutPass>
  
  <UpdateUserWithPass>
    UPDATE users SET users.name = "{1}", users.last_name = "{2}", users.third_name = "{3}", users.employee_number = {4}, users.role_id = {5}, users.password = "{6}"
    WHERE users.id IN({0})
  </UpdateUserWithPass>
  
  <AddUser>
  INSERT INTO users (users.last_name, users.name, users.third_name, users.password, users.employee_number, users.role_id, users.is_active) VALUES("{0}","{1}","{2}","{3}",{4},{5}, 1)
  </AddUser>
  
  <HideUsers>
	UPDATE users SET users.is_active = 0 
	WHERE users.id IN({0})
  </HideUsers>

  <Barabans>
	SELECT * FROM baraban_types ORDER BY baraban_types.name ASC
  </Barabans>
  <AddBaraban>
    INSERT INTO baraban_types (baraban_types.name, baraban_types.weight) VALUES ("{0}", {1})
  </AddBaraban>

  <ShowCables>
	SELECT Cables.CabNum, Cables.CabName, CabNameStruct, norm_docum.DocNum, Cables.TextPrim, Cables.KodOKP, Cables.KodOKP_KCH FROM Cables LEFT JOIN norm_docum ON (Cables.DocInd = norm_docum.DocInd)
  </ShowCables>
  
  <ShowCableMarks>
	SELECT Distinct Cables.CabName from Cables ORDER BY Cables.CabName ASC
  </ShowCableMarks>
  
  <ShowNormaDocs>
	SELECT Distinct Norm_Docum.DocInd, Norm_Docum.DocNum, Norm_Docum.DocName  from Norm_Docum ORDER BY Norm_Docum.DocNum ASC
  </ShowNormaDocs>
  
  <ShowStructTypes>
	SELECT * from Tipy_Poviv ORDER BY Tipy_Poviv.StruktNum ASC
  </ShowStructTypes>
  
  <ShowLeadsMaterial>
	SELECT Materialy_Gil.MaterInd, Materialy_Gil.MaterName from Materialy_Gil ORDER BY Materialy_Gil.MaterInd ASC
  </ShowLeadsMaterial>
  
  <ShowLeadsDiameters>
	SELECT Distinct Struktury_Cab.DiamGil from Struktury_Cab ORDER BY Struktury_Cab.DiamGil ASC
  </ShowLeadsDiameters>
  
  <ShowIsolationMaterial>
	SELECT Materialy_Izol.MaterInd, Materialy_Izol.MaterName from Materialy_Izol ORDER BY Materialy_Izol.MaterInd ASC
  </ShowIsolationMaterial>
  
  <ShowWaveResistance>
	SELECT Distinct Struktury_Cab.Zwave from Struktury_Cab ORDER BY Struktury_Cab.Zwave ASC
  </ShowWaveResistance>
  
  <ShowDrFormuls>
	SELECT * from dr_formuls ORDER BY dr_formuls.drind ASC
  </ShowDrFormuls>
  
  <ShowDrPrivFormuls>
	SELECT * from dr_priv_formuls ORDER BY dr_priv_formuls.drprivind ASC
  </ShowDrPrivFormuls>
  
  <users_in_old_db>
    SELECT familija_imja_ot.UserNum as id, familija_imja_ot.familija as last_name, familija_imja_ot.imja as name, familija_imja_ot.otchestvo as third_name, familija_imja_ot.tabnum as employee_number, familija_imja_ot.pass as password, dolshnosti.dolshnost as role_name, dolshnosti.dolshnum as role_id, familija_imja_ot.activ as is_active  FROM Familija_imja_ot LEFT JOIN Dolshnosti ON (Familija_imja_ot.Dolshnost = Dolshnosti.DolshNum)
  </users_in_old_db>
  
  <barabans_in_old_db>
    SELECT Tipy_Baraban.TipInd as id, Tipy_Baraban.TipName as name, Tipy_Baraban.massa as weight  FROM Tipy_Baraban
  </barabans_in_old_db>
  <AddBarabanFromOldDB>
    INSERT IGNORE INTO baraban_types (baraban_types.id, baraban_types.name, baraban_types.weight) VALUES ({0}, "{1}", {2})
  </AddBarabanFromOldDB>
</SQLQuery>